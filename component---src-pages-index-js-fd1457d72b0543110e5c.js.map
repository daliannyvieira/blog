{"version":3,"sources":["webpack:///./src/components/posts.js","webpack:///./src/pages/index.js"],"names":["Posts","posts","className","title","keywords","map","node","frontmatter","imageAuthor","coverAuthor","fluid","cover","childImageSharp","key","fields","slug","style","marginBottom","boxShadow","to","longDate","shortDate","pluralizeReadingTime","timeToRead","height","alt","dangerouslySetInnerHTML","__html","description","excerpt","query","IndexPage","data","allMarkdownRemark","edges"],"mappings":"gMA0EeA,EApED,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKC,UAAU,cACb,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,CAAC,OAAD,uIAkBXH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNH,EAAQG,EAAKC,YAAYJ,MACzBK,EAAcF,EAAKC,YAAYE,YAC7BC,EAAUJ,EAAKC,YAAYI,MAAMC,gBAAjCF,MAER,OACE,yBACEG,IAAKP,EAAKQ,OAAOC,KACjBb,UAAU,qBAEV,wBACEc,MAAO,CACLC,aAAc,IAGhB,kBAAC,OAAD,CAAMD,MAAO,CAAEE,UAAU,QAAWC,GAAIb,EAAKQ,OAAOC,MACjDZ,IAGL,2BAAOA,MAAOG,EAAKC,YAAYa,UAC5Bd,EAAKC,YAAYc,UADpB,KACwC,IACrCC,YAAqBhB,EAAKiB,aAE7B,kBAAC,IAAD,CACEP,MAAO,CACLQ,OAAO,QAETd,MAAOA,EACPe,IAAKjB,IAEP,uBACEkB,wBAAyB,CACvBC,OAAQrB,EAAKC,YAAYqB,aAAetB,EAAKuB,WAGjD,kBAAC,OAAD,CAAM3B,UAAS,WAAciB,GAAIb,EAAKQ,OAAOC,MAA7C,mBChEZ,sCAMA,IA4Bae,EAAK,aAiCHC,UA7DG,SAAC,GAAc,IACzB9B,EADwB,EAAX+B,KACAC,kBAAkBC,MACrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/B,MAAM,OACNC,SAAU,CAAC,OAAD,uIAiBZ,kBAAC,EAAD,CAAOH,MAAOA","file":"component---src-pages-index-js-fd1457d72b0543110e5c.js","sourcesContent":["import React from 'react';\nimport SEO from \"../components/seo\"\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\nimport pluralizeReadingTime from \"../constants/pluralize-reading-time\";\n\nconst Posts = ({ posts }) => {\n  return (\n    <div className='posts-list'>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `javascript`,\n          `vuejs`,\n          `vue`,\n          `nodejs`,\n          `node`,\n          `reactjs`,\n          `react`,\n          `python`,\n          `vainaweb`,\n          `dalianny vieira`,\n          `teaching`,\n          `leadership`,\n        ]}\n      />\n\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title;\n        const imageAuthor = node.frontmatter.coverAuthor;\n        const { fluid } = node.frontmatter.cover.childImageSharp;\n\n        return (\n          <div\n            key={node.fields.slug}\n            className=\"blog-post-preview\"\n          >\n            <h2\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h2>\n            <small title={node.frontmatter.longDate}>\n              {node.frontmatter.shortDate} &middot;{' '}\n              {pluralizeReadingTime(node.timeToRead)}\n            </small>\n            <Image\n              style={{\n                height: `20vh`\n              }}\n              fluid={fluid}\n              alt={imageAuthor}\n            />\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n            />\n            <Link className={`squiggly`} to={node.fields.slug}>\n              Leia mais\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  )\n}\n\nexport default Posts;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Posts from \"../components/posts\";\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout>\n      <SEO\n        title=\"Home\"\n        keywords={[\n          `blog`,\n          `gatsby`,\n          `javascript`,\n          `vuejs`,\n          `vue`,\n          `nodejs`,\n          `node`,\n          `reactjs`,\n          `react`,\n          `python`,\n          `vainaweb`,\n          `dalianny vieira`,\n          `teaching`,\n          `leadership`,\n        ]}\n      />\n      <Posts posts={posts}/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            shortDate: date(formatString: \"MMMM DD, YYYY\")\n            longDate: date(formatString: \"MMMM DD, YYYY, h:mm:ss a\")\n            title\n            description\n            categories\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage;"],"sourceRoot":""}